<?xml version="1.0" encoding="UTF-8"?>
<!-- 配置文件每隔1分钟，就检查更新 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
    <property name="log.pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n" />
    <property name="log.pattern.short" value="%date{yyyyMMdd HH:mm:ss.SSS}-%msg%n" />
    <!-- 彩色日志格式 -->
    <property name="log.pattern.color" value="%green(%date{yyyy-MM-dd HH:mm:ss}) [%thread] |%highlight(%-5level) |%green(%logger:%line) |%black(%msg%n)" />

    <property name="log.charset" value="UTF-8" />
    <!-- 获取spring上下文属性 -->
    <springProperty scope="local" name="springAppName" source="spring.application.name"
                    defaultValue="demo-server"/>

    <!-- Console 输出设置 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder charset="${log.charset}">
            <pattern>${log.pattern.color}</pattern>
        </encoder>
    </appender>

    <!--输出到logstash的appender-->
    <appender name="logstash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <!--可以访问的logstash日志收集端口-->
        <destination>192.168.0.108:4560</destination>
        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder">
            <!--自定义字段，区分应用名称-->
            <timestamp>
                <timeZone>UTC</timeZone>
            </timestamp>
            <pattern>
                <pattern>
                    {
                    "severity": "%level",
                    "service": "${springAppName:-}",
                    "port": "${serverPort:-}",
                    "trace": "%X{X-B3-TraceId:-}",
                    "span": "%X{X-B3-SpanId:-}",
                    "exportable": "%X{X-Span-Export:-}",
                    "pid": "${PID:-}",
                    "thread": "%thread",
                    "class": "%logger{40}",
                    "rest": "%msg"
                    }
                </pattern>
            </pattern>
        </encoder>

    </appender>

    <!-- 也是一种<logger>,是所有<logger>的父级 -->
    <!-- 不设置additivity属性，或者设置additivity = true的<logger>,会继承root的子标签<appender-ref ref="console" />的设置，
        将它自己设置的level属性级别及以上的日志打印到控制台 -->
    <root level="info">
        <!-- 表示按照console的设置去输出日志到控制台 -->
        <appender-ref ref="console"/>
        <appender-ref ref="logstash"/>
    </root>
</configuration>